name: CI

on:
  push:
    branches:
      - "{{cookiecutter.git_default_branch}}"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
  workflow_dispatch:

defaults:
  run:
    shell: sh

jobs:
  build:
    name: "${{'{{ matrix.os.name }}'}} / GHC-${{'{{ matrix.haskell.ghc.version }}'}}"
    runs-on: "${{'{{ matrix.os.type }}'}}"

    strategy:
      matrix:
        os:
        - name: Linux
          type: ubuntu-latest
        - name: macOS
          type: macOS-latest
        - name: Windows
          type: windows-latest
        haskell:
          - ghc:
              version: "{{cookiecutter.__ghc_version | major_minor}}"
          - cabal:
              version: "{{cookiecutter.__cabal_version | major_minor}}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        id: setup-haskell
        with:
          ghc-version: "${{'{{ matrix.haskell.ghc.version }}'}}"
          cabal-version: "${{'{{ matrix.haskell.cabal.version }}'}}"

      - name: Freeze Haskell dependencies
        run: |
          cabal v2-update
          cabal v2-freeze $CABAL_ARGS

      - name: Cache Haskell dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{'{{ steps.setup-haskell.outputs.cabal-store }}'}}
            dist-newstyle
          key: haskell-${{'{{ runner.os }}'}}-${{'{{ matrix.haskell.ghc.version }}'}}-${{'{{ hashFiles(cabal.project.freeze) }}'}}
          restore-keys: haskell-${{'{{ runner.os }}'}}-${{'{{ matrix.haskell.ghc.version }}'}}-

      - name: Build
        run: cabal v2-build

{% if cookiecutter.use_test == "y" %}
      - name: Test
        run: cabal v2-test

{% endif %}
